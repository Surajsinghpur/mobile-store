{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import SearchBar from './components/SearchBar';\n// import MobileCard from './components/MobileCard';\n// import BookingForm from './components/BookingForm';\n\n// const App = () => {\n//     const [mobiles, setMobiles] = useState([]);\n//     const [showForm, setShowForm] = useState(false);\n//     const [loading, setLoading] = useState(true);\n//     const [error, setError] = useState('');\n//     const [selectedMobile, setSelectedMobile] = useState(null); // Track selected mobile for booking\n\n//     // Fetch all mobile data when the app loads\n//     useEffect(() => {\n//         fetchMobiles();\n//     }, []);\n\n//     const fetchMobiles = async (query = '') => {\n//         setLoading(true);\n//         setError('');\n//         const endpoint = query\n//             ? `http://127.0.0.1:8000/api/phones?search=${query}`\n//             : `http://127.0.0.1:8000/api/phones`;\n\n//         try {\n//             const response = await fetch(endpoint);\n//             if (!response.ok) {\n//                 throw new Error('Failed to fetch data from the server');\n//             }\n//             const data = await response.json();\n//             if (data.message === 'No phones found') {\n//                 setMobiles([]);\n//                 setError('No phones found');\n//             } else {\n//                 setMobiles(data);\n//             }\n//         } catch (err) {\n//             console.error('Error fetching mobiles:', err);\n//             setError('Failed to fetch data. Please check your connection or try again later.');\n//         } finally {\n//             setLoading(false);\n//         }\n//     };\n\n//     const handleSearch = (query) => {\n//         fetchMobiles(query);\n//     };\n\n//     const handleBooking = async (bookingDetails) => {\n//         try {\n//             const response = await fetch('http://127.0.0.1:8000/api/book', {\n//                 method: 'POST',\n//                 headers: { 'Content-Type': 'application/json' },\n//                 body: JSON.stringify({\n//                     ...bookingDetails,\n//                     phoneId: selectedMobile?.id, // Include selected mobile ID in booking\n//                 }),\n//             });\n\n//             if (response.ok) {\n//                 alert('Your phone is booked successfully!');\n//                 setShowForm(false);\n//                 setSelectedMobile(null); // Clear selected mobile after successful booking\n//             } else {\n//                 throw new Error('Failed to book the phone');\n//             }\n//         } catch (err) {\n//             console.error('Error booking phone:', err);\n//             alert('Error booking phone. Please try again later.');\n//         }\n//     };\n\n//     const handleBookNowClick = (mobile) => {\n//         setSelectedMobile(mobile);\n//         setShowForm(true);\n//     };\n\n//     return (\n//         <div className=\"container mt-4\">\n//             <h1 className=\"text-center\">MOBILE STORE</h1>\n//             <SearchBar onSearch={handleSearch} />\n//             <div className=\"row mt-4\">\n//                 {loading ? (\n//                     <div className=\"col-12\">Loading...</div>\n//                 ) : error ? (\n//                     <div className=\"col-12 text-danger\">{error}</div>\n//                 ) : mobiles.length > 0 ? (\n//                     mobiles.map((mobile) => (\n//                         <div key={mobile.id} className=\"col-md-4 mb-4\">\n//                             <MobileCard \n//                                 mobile={mobile} \n//                                 onBookNow={() => handleBookNowClick(mobile)} \n//                             />\n//                         </div>\n//                     ))\n//                 ) : (\n//                     <div className=\"col-12\">No phones found</div>\n//                 )}\n//             </div>\n//             <div className=\"text-center mt-4\">\n//                 <button\n//                     className=\"btn btn-primary\"\n//                     onClick={() => {\n//                         setSelectedMobile(null); // No specific phone selected for this booking\n//                         setShowForm(true);\n//                     }}\n//                 >\n//                     Book Now\n//                 </button>\n//             </div>\n//             <BookingForm\n//                 show={showForm}\n//                 onClose={() => {\n//                     setShowForm(false);\n//                     setSelectedMobile(null);\n//                 }}\n//                 onSubmit={handleBooking}\n//                 title={`Book Your Phone${selectedMobile ? `: ${selectedMobile.name}` : ''}`}\n//             />\n//         </div>\n//     );\n// };\n\n// export default App;","map":{"version":3,"names":[],"sources":["D:/mobile_store/client/src/App.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import SearchBar from './components/SearchBar';\r\n// import MobileCard from './components/MobileCard';\r\n// import BookingForm from './components/BookingForm';\r\n\r\n// const App = () => {\r\n//     const [mobiles, setMobiles] = useState([]);\r\n//     const [showForm, setShowForm] = useState(false);\r\n//     const [loading, setLoading] = useState(true);\r\n//     const [error, setError] = useState('');\r\n//     const [selectedMobile, setSelectedMobile] = useState(null); // Track selected mobile for booking\r\n\r\n//     // Fetch all mobile data when the app loads\r\n//     useEffect(() => {\r\n//         fetchMobiles();\r\n//     }, []);\r\n\r\n//     const fetchMobiles = async (query = '') => {\r\n//         setLoading(true);\r\n//         setError('');\r\n//         const endpoint = query\r\n//             ? `http://127.0.0.1:8000/api/phones?search=${query}`\r\n//             : `http://127.0.0.1:8000/api/phones`;\r\n\r\n//         try {\r\n//             const response = await fetch(endpoint);\r\n//             if (!response.ok) {\r\n//                 throw new Error('Failed to fetch data from the server');\r\n//             }\r\n//             const data = await response.json();\r\n//             if (data.message === 'No phones found') {\r\n//                 setMobiles([]);\r\n//                 setError('No phones found');\r\n//             } else {\r\n//                 setMobiles(data);\r\n//             }\r\n//         } catch (err) {\r\n//             console.error('Error fetching mobiles:', err);\r\n//             setError('Failed to fetch data. Please check your connection or try again later.');\r\n//         } finally {\r\n//             setLoading(false);\r\n//         }\r\n//     };\r\n\r\n//     const handleSearch = (query) => {\r\n//         fetchMobiles(query);\r\n//     };\r\n\r\n//     const handleBooking = async (bookingDetails) => {\r\n//         try {\r\n//             const response = await fetch('http://127.0.0.1:8000/api/book', {\r\n//                 method: 'POST',\r\n//                 headers: { 'Content-Type': 'application/json' },\r\n//                 body: JSON.stringify({\r\n//                     ...bookingDetails,\r\n//                     phoneId: selectedMobile?.id, // Include selected mobile ID in booking\r\n//                 }),\r\n//             });\r\n\r\n//             if (response.ok) {\r\n//                 alert('Your phone is booked successfully!');\r\n//                 setShowForm(false);\r\n//                 setSelectedMobile(null); // Clear selected mobile after successful booking\r\n//             } else {\r\n//                 throw new Error('Failed to book the phone');\r\n//             }\r\n//         } catch (err) {\r\n//             console.error('Error booking phone:', err);\r\n//             alert('Error booking phone. Please try again later.');\r\n//         }\r\n//     };\r\n\r\n//     const handleBookNowClick = (mobile) => {\r\n//         setSelectedMobile(mobile);\r\n//         setShowForm(true);\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"container mt-4\">\r\n//             <h1 className=\"text-center\">MOBILE STORE</h1>\r\n//             <SearchBar onSearch={handleSearch} />\r\n//             <div className=\"row mt-4\">\r\n//                 {loading ? (\r\n//                     <div className=\"col-12\">Loading...</div>\r\n//                 ) : error ? (\r\n//                     <div className=\"col-12 text-danger\">{error}</div>\r\n//                 ) : mobiles.length > 0 ? (\r\n//                     mobiles.map((mobile) => (\r\n//                         <div key={mobile.id} className=\"col-md-4 mb-4\">\r\n//                             <MobileCard \r\n//                                 mobile={mobile} \r\n//                                 onBookNow={() => handleBookNowClick(mobile)} \r\n//                             />\r\n//                         </div>\r\n//                     ))\r\n//                 ) : (\r\n//                     <div className=\"col-12\">No phones found</div>\r\n//                 )}\r\n//             </div>\r\n//             <div className=\"text-center mt-4\">\r\n//                 <button\r\n//                     className=\"btn btn-primary\"\r\n//                     onClick={() => {\r\n//                         setSelectedMobile(null); // No specific phone selected for this booking\r\n//                         setShowForm(true);\r\n//                     }}\r\n//                 >\r\n//                     Book Now\r\n//                 </button>\r\n//             </div>\r\n//             <BookingForm\r\n//                 show={showForm}\r\n//                 onClose={() => {\r\n//                     setShowForm(false);\r\n//                     setSelectedMobile(null);\r\n//                 }}\r\n//                 onSubmit={handleBooking}\r\n//                 title={`Book Your Phone${selectedMobile ? `: ${selectedMobile.name}` : ''}`}\r\n//             />\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default App;\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}